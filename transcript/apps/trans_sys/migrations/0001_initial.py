# Generated by Django 2.0.3 on 2018-11-18 04:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Address', models.CharField(blank=True, max_length=50, null=True)),
                ('City', models.CharField(blank=True, max_length=10, null=True)),
                ('Province', models.CharField(blank=True, max_length=10, null=True)),
                ('Country', models.CharField(blank=True, max_length=10, null=True)),
                ('Postal', models.CharField(blank=True, max_length=10, null=True)),
                ('Citizenship', models.CharField(choices=[('citizen', 'CITIZEN'), ('temp-study', 'TEMPORARY STUDENT')], max_length=10)),
                ('Gender', models.CharField(choices=[('male', 'MALE'), ('female', 'FEMALE')], max_length=6)),
                ('Phone', models.CharField(blank=True, max_length=12, null=True)),
                ('GPA', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Student Infomation',
                'verbose_name_plural': 'Student Infomation',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('Course_ID', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='Course ID')),
                ('Course_Name', models.CharField(max_length=15, verbose_name='Course Name')),
                ('Course_Description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Course Description')),
                ('Course_Hour', models.DateTimeField(blank=True, null=True, verbose_name='Course Hour')),
            ],
            options={
                'verbose_name': 'Course Information',
                'verbose_name_plural': 'Course Information',
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('degree_id', models.CharField(max_length=9, primary_key=True, serialize=False, verbose_name='Degree ID')),
                ('degree', models.CharField(choices=[('cs', 'COMPUTER SCIENCE'), ('mac', 'MASTER OF APPLIED COMPUTING')], default='mac', max_length=20)),
            ],
            options={
                'verbose_name': 'Degree',
                'verbose_name_plural': 'Degree',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Grade', models.IntegerField(blank=True, null=True)),
                ('Course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trans_sys.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Course Registration Information',
                'verbose_name_plural': 'Course Registration Information',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_ID', models.CharField(max_length=5, primary_key=True, serialize=False, verbose_name='Semester ID')),
                ('semester_Name', models.CharField(max_length=20, verbose_name='Semester Name')),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semester',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='Degree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trans_sys.Degree'),
        ),
    ]
